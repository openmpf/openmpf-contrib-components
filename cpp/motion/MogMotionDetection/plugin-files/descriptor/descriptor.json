{
  "componentName": "MogMotionDetection",
  "componentVersion": "8.0",
  "middlewareVersion": "8.0",
  "sourceLanguage": "c++",
  "batchLibrary": "${MPF_HOME}/plugins/MogMotionDetection/lib/libmpfMogMotionDetection.so",
  "environmentVariables": [
    {
      "name": "LD_LIBRARY_PATH",
      "value": "${MPF_HOME}/plugins/MogMotionDetection/lib:${LD_LIBRARY_PATH}"
    }
  ],
  "algorithm": {
    "name": "MOG",
    "description": "Detects motion in videos using a Mixture of Gaussians (MOG) model.",
    "actionType": "DETECTION",
    "trackType": "MOTION",
    "outputChangedCounter" : 1,
    "requiresCollection": {
      "states": []
    },
    "providesCollection": {
      "states": [
        "DETECTION",
        "DETECTION_MOTION",
        "DETECTION_MOTION_MOG"
      ],
      "properties": [
        {
          "name": "USE_MOTION_TRACKING",
          "description": "0: Do not use tracking algorithm (old method). 1: Use STRUCK tracking.",
          "type": "INT",
          "defaultValue": "0"
        },
        {
          "name": "USE_PREPROCESSOR",
          "description": "Enables the use of motion as a preprocessor. Only will return if motion is in frame. Overrides USE_MOTION_TRACKING.",
          "type": "INT",
          "defaultValue": "0"
        },
        {
          "name": "HISTORY_LENGTH",
          "description": "The number of previous frames to use as the background image.",
          "type": "INT",
          "defaultValue": "500"
        },
        {
          "name": "VAR_THRESHOLD",
          "description": "Threshold on the squared Mahalanobis distance to decide whether it is well described by the background model. This parameter does not affect the background update. A typical value could be 4 sigma, that is, varThreshold=4*4=16; (definition from OpenCV).",
          "type": "INT",
          "defaultValue": "16"
        },
        {
          "name": "BACKGROUND_SHADOW_DETECTION",
          "description": "Parameter defining whether shadow detection should be enabled (definition from OpenCV).",
          "type": "BOOLEAN",
          "defaultValue": "true"
        },
        {
          "name": "MAXIMUM_FRAME_WIDTH",
          "description": "Maximum width of the frame passed to MOG2. The frame will be downsampled until it is at or below the value. Smaller frames result in increased speed of MOG2. The frame original aspect ratio is maintained.",
          "type": "INT",
          "defaultValue": "128"
        },
        {
          "name": "MAXIMUM_FRAME_HEIGHT",
          "description": "Maximum height of the frame passed to MOG2. The frame will be downsampled until it is at or below the value. Smaller frames result in increased speed of MOG2. The frame's original aspect ratio is maintained.",
          "type": "INT",
          "defaultValue": "128"
        },
        {
          "name": "MIN_RECT_WIDTH",
          "description": "Minimum width of detected motion in the original frame.",
          "type": "INT",
          "defaultValue": "16"
        },
        {
          "name": "MIN_RECT_HEIGHT",
          "description": "Minimum height of detected motion in the original frame.",
          "type": "INT",
          "defaultValue": "16"
        },
        {
          "name": "ERODE_ANCHOR_X",
          "description": "X position of the anchor within the element; -1 means that the anchor is at the element x center (definition from OpenCV).",
          "type": "INT",
          "defaultValue": "-1"
        },
        {
          "name": "ERODE_ANCHOR_Y",
          "description": "Y position of the anchor within the element; -1 means that the anchor is at the element y center (definition from OpenCV).",
          "type": "INT",
          "defaultValue": "-1"
        },
        {
          "name": "ERODE_ITERATIONS",
          "description": "The number of times erosion is applied.",
          "type": "INT",
          "defaultValue": "1"
        },
        {
          "name": "DILATE_ANCHOR_X",
          "description": "X position of the anchor within the element; -1 means that the anchor is at the element x center (definition from OpenCV).",
          "type": "INT",
          "defaultValue": "-1"
        },
        {
          "name": "DILATE_ANCHOR_Y",
          "description": "Y position of the anchor within the element; -1 means that the anchor is at the element y center (definition from OpenCV).",
          "type": "INT",
          "defaultValue": "-1"
        },
        {
          "name": "DILATE_ITERATIONS",
          "description": "The number of times dilation is applied.",
          "type": "INT",
          "defaultValue": "4"
        },
        {
          "name": "MEDIAN_BLUR_K_SIZE",
          "description": "Aperture linear size; it must be odd and greater than 1 (definition from OpenCV).",
          "type": "INT",
          "defaultValue": "3"
        },
        {
          "name": "GROUP_RECTANGLES_GROUP_THRESHOLD",
          "description": "Minimum possible number of rectangles minus 1. The threshold is used in a group of rectangles to retain it (definition from OpenCV).",
          "type": "INT",
          "defaultValue": "1"
        },
        {
          "name": "GROUP_RECTANGLES_EPS",
          "description": "Relative difference between sides of the rectangles to merge them into a group (definition from OpenCV).",
          "type": "DOUBLE",
          "defaultValue": "0.4"
        },
        {
          "name": "TRACKING_MAX_OBJECT_PERCENTAGE",
          "description": "Max size of track as percentage of frame.",
          "type": "DOUBLE",
          "defaultValue": "0.9"
        },
        {
          "name": "TRACKING_THRESHOLD",
          "description": "The threshold for STRUCK when determining if a track should stop.",
          "type": "DOUBLE",
          "defaultValue": "-1"
        },
        {
          "name": "VERBOSE",
          "description": "0: no debugging output 1: log all track results.",
          "type": "INT",
          "defaultValue": "0"
        }
      ]
    }
  },
  "actions": [
    {
      "name": "MOG MOTION DETECTION ACTION",
      "description": "Executes the MOG motion detection algorithm using the default parameters.",
      "algorithm": "MOG",
      "properties": []
    },
    {
      "name": "MOG MOTION DETECTION (WITH TRACKING) ACTION",
      "description": "Executes the MOG motion detection algorithm and groups the resulting detections into tracks.",
      "algorithm": "MOG",
      "properties": [
        {
          "name": "USE_MOTION_TRACKING",
          "value": 1
        }
      ]
    },
    {
      "name": "MOG MOTION DETECTION PREPROCESSOR ACTION",
      "description": "Executes an instance of the MOG motion detection algorithm tuned for pre-processing.",
      "algorithm": "MOG",
      "properties": [
        {
          "name": "TARGET_SEGMENT_LENGTH",
          "value": 500
        },
        {
          "name": "MIN_SEGMENT_LENGTH",
          "value": 25
        },
        {
          "name": "FRAME_INTERVAL",
          "value": 1
        },
        {
          "name": "MIN_GAP_BETWEEN_SEGMENTS",
          "value": 10
        },
        {
          "name": "USE_MOTION_TRACKING",
          "value": 0
        },
        {
          "name": "USE_PREPROCESSOR",
          "value": 1
        }
      ]
    },
    {
      "name": "MOG MOTION DETECTION (WITH AUTO-ORIENTATION) PREPROCESSOR ACTION",
      "description": "Executes an instance of the MOG motion detection algorithm tuned for pre-processing with rotation and/or flipping based on EXIF data or video metadata.",
      "algorithm": "MOG",
      "properties": [
        {
          "name": "TARGET_SEGMENT_LENGTH",
          "value": 500
        },
        {
          "name": "MIN_SEGMENT_LENGTH",
          "value": 25
        },
        {
          "name": "FRAME_INTERVAL",
          "value": 1
        },
        {
          "name": "MIN_GAP_BETWEEN_SEGMENTS",
          "value": 10
        },
        {
          "name": "USE_MOTION_TRACKING",
          "value": 0
        },
        {
          "name": "USE_PREPROCESSOR",
          "value": 1
        },
        {
          "name": "AUTO_ROTATE",
          "value": "true"
        },
        {
          "name": "AUTO_FLIP",
          "value": "true"
        }
      ]
    }
  ],
  "tasks": [
    {
      "name": "MOG MOTION DETECTION TASK",
      "description": "Performs MOG motion detection.",
      "actions": [
        "MOG MOTION DETECTION ACTION"
      ]
    },
    {
      "name": "MOG MOTION DETECTION PREPROCESSOR TASK",
      "description": "Performs MOG motion detection as a preprocessor.",
      "actions": [
        "MOG MOTION DETECTION PREPROCESSOR ACTION"
      ]
    },
    {
      "name": "MOG MOTION DETECTION (WITH AUTO-ORIENTATION) PREPROCESSOR TASK",
      "description": "Performs MOG motion detection as a preprocessor with rotation and/or flipping based on EXIF data or video metadata.",
      "actions": [
        "MOG MOTION DETECTION (WITH AUTO-ORIENTATION) PREPROCESSOR ACTION"
      ]
    },
    {
      "name": "MOG MOTION DETECTION (WITH TRACKING) TASK",
      "description": "Performs MOG motion detection and tracking.",
      "actions": [
        "MOG MOTION DETECTION (WITH TRACKING) ACTION"
      ]
    }
  ],
  "pipelines": [
    {
      "name": "MOG MOTION DETECTION (WITH TRACKING) PIPELINE",
      "description": "Performs MOG MOTION detection.",
      "tasks": [
        "MOG MOTION DETECTION (WITH TRACKING) TASK"
      ]
    },
    {
      "name": "MOG MOTION DETECTION (WITH TRACKING AND MARKUP) PIPELINE",
      "description": "Performs MOG MOTION detection with markup.",
      "tasks": [
        "MOG MOTION DETECTION (WITH TRACKING) TASK",
        "OCV GENERIC MARKUP TASK"
      ]
    }
  ]
}

